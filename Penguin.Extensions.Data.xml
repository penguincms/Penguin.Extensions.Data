<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Penguin.Extensions.Data</name>
    </assembly>
    <members>
        <member name="M:Penguin.Extensions.Data.DataTableExtensions.ToCsv(System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            Writes a DataTable to a CSV file specified by the path
            </summary>
            <param name="dataTable">The datatable to write</param>
            <param name="filePath">The location of the CSV to create</param>
            <param name="includeHeaders">Write column headers to the output string</param>
        </member>
        <member name="M:Penguin.Extensions.Data.DataTableExtensions.ToCSV(System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            Writes a DataTable to a CSV file specified by the path
            </summary>
            <param name="dataTable">The datatable to write</param>
            <param name="filePath">The location of the CSV to create</param>
            <param name="includeHeaders">Write column headers to the output string</param>
        </member>
        <member name="M:Penguin.Extensions.Data.DataTableExtensions.ToCSV(System.Data.DataTable,System.Boolean)">
            <summary>
            Writes a datatable as a CSV string and returns the string
            </summary>
            <param name="dataTable">The data source</param>
            <returns>A CSV representation of the data table</returns>
            <param name="includeHeaders">Write column headers to the output string</param>
        </member>
        <member name="M:Penguin.Extensions.Data.DataTableExtensions.ToCsv(System.Data.DataTable,System.Boolean)">
            <summary>
            Writes a datatable as a CSV string and returns the string
            </summary>
            <param name="dataTable">The data source</param>
            <returns>A CSV representation of the data table</returns>
            <param name="includeHeaders">Write column headers to the output string</param>
        </member>
        <member name="M:Penguin.Extensions.Data.DataTableExtensions.ToHtmlTable(System.Data.DataTable)">
            <summary>
            Returns an HTML string table representation of a data table
            </summary>
            <param name="dt">The data table to convert</param>
            <returns>An HTML string table representation of a data table</returns>
        </member>
        <member name="M:Penguin.Extensions.Data.IEnumerableExtensions.ToDataTable(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Converts an IEnumerable of objects to a data table, with property names as headers and values as items
            </summary>
            <param name="objList">The IEnumerable of objects to use as a data source</param>
            <returns>A data table containing the object values</returns>
        </member>
        <member name="M:Penguin.Extensions.Data.XNodeExtensions.GetAllChildrenByName(System.Xml.Linq.XNode,System.String)">
            <summary>
            Returns a list of all child nodes by name
            </summary>
            <param name="node">The node to search</param>
            <param name="childName">The child name to search for</param>
            <returns>All children matching the name</returns>
        </member>
        <member name="M:Penguin.Extensions.Data.XNodeExtensions.GetAllChildrenByName(System.Xml.Linq.XElement,System.String)">
            <summary>
            Returns a list of all child nodes by name
            </summary>
            <param name="node">The node to search</param>
            <param name="childName">The child name to search for</param>
            <returns>All children matching the name</returns>
        </member>
    </members>
</doc>
